{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.css","titleAppearing.module.css","phonebookAppearing.module.css","components/ContactList/ContactList.module.css","components/ContactList/transition.module.css","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/ContactItem/ContactItem.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","redux/filter/filter-actions.js","components/Filter/Filter.js","App.jsx","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","ContactForm","changeContactsState","useState","name","setName","number","setNumber","handleChange","evt","target","value","console","log","className","styles","form","onSubmit","preventDefault","action","label","htmlFor","form__field","type","id","pattern","title","placeholder","onChange","required","name__label","number__label","submit__btn","addContact","createAction","deleteContact","ContactItem","contact","dispatch","useDispatch","contact__item","contact__text","delete__btn","onClick","onDeleteClick","getFilterVal","state","contacts","filter","getContacts","items","findContactsByQuery","nameToFilter","toLowerCase","includes","ContactList","useSelector","TransitionGroup","component","list","map","CSSTransition","in","length","timeout","classNames","transitionStyles","unmountOnExit","updateFilter","Filter","filterVal","filter__title","filter__field","App","appear","titleAppearing","phonebookAppearing","find","alert","nanoid","createReducer","payload","_","contactsPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","contactReducer","filterReducer","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d2eefdc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactItem_contact__item__16XEi\",\"contact__text\":\"ContactItem_contact__text__b5cWT\",\"delete__btn\":\"ContactItem_delete__btn__IVdMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"filter__field\":\"Filter_filter__field__FWY-Z\",\"filter__title\":\"Filter_filter__title__3xM9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"titleAppearing_appear__MHGyE\",\"appearActive\":\"titleAppearing_appearActive__2Bv-4\",\"phonebook__title\":\"titleAppearing_phonebook__title__aiQDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"phonebookAppearing_appear__2TEec\",\"appearActive\":\"phonebookAppearing_appearActive__3fPuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transition_enter__2r5x1\",\"enterActive\":\"transition_enterActive__2v0qq\",\"exit\":\"transition_exit__yK9o3\",\"exitActive\":\"transition_exitActive__R_I7Q\"};","import styles from './ContactForm.module.scss';\nimport { PropTypes } from 'prop-types';\nimport { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n\n// import { addContact } from 'redux/contacts/contacts-actions';\n// import { getContacts } from 'redux/contacts/contacts-selector';\n\n// const INITIAL_FORM_STATE = { name: '', number: '' };\n\nfunction ContactForm({ changeContactsState }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n\n    console.log({ [name]: value });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    changeContactsState(contact);\n    resetForm();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} action=\"#\">\n      <label className={styles.label} htmlFor=\"name\">\n        <input\n          className={styles.form__field}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\" \"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.name__label}>Name</span>\n      </label>\n\n      <label className={styles.label} htmlFor=\"number\">\n        <input\n          className={styles.form__field}\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\" \"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.number__label}>Number</span>\n      </label>\n      <button className={styles.submit__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { changeContactsState: PropTypes.func.isRequired };\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  changeContactsState: PropTypes.func.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\n\nexport const deleteContact = createAction('contacts/delete');\n","import { PropTypes } from 'prop-types';\nimport styles from './ContactItem.module.scss';\n\nimport { deleteContact } from 'redux/contacts/contacts-actions';\nimport { useDispatch } from 'react-redux';\nexport default function ContactItem({ contact }) {\n  const { name, number, id } = contact;\n\n  const dispatch = useDispatch();\n\n  const onDeleteClick = id => dispatch(deleteContact(id));\n  return (\n    <li key={id} className={styles.contact__item}>\n      <span className={styles.contact__text}>\n        {name}: {number}\n      </span>\n      <button className={styles.delete__btn} onClick={() => onDeleteClick(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","export const getFilterVal = state => state.contacts.filter;\n","import { getFilterVal } from 'redux/filter/filter-selector';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const findContactsByQuery = state => {\n  const contacts = getContacts(state);\n  const nameToFilter = getFilterVal(state);\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(nameToFilter.toLowerCase())\n  );\n};\n","import ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\nimport transitionStyles from './transition.module.css';\n\nimport { useSelector } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { findContactsByQuery } from 'redux/contacts/contacts-selector';\n// import { defaultContacts } from 'redux/contacts/contacts-selector';\n\nexport default function ContactList() {\n  const contacts = useSelector(findContactsByQuery);\n\n  // const defContacts = useSelector(defaultContacts);\n  // const onDeleteClick = id => dispatch(deleteContact(id));\n\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(contact => (\n        <CSSTransition\n          in={contacts.length > 0}\n          key={contact.id}\n          timeout={250}\n          classNames={transitionStyles}\n          unmountOnExit\n        >\n          <ContactItem key={contact.name} contact={contact} />\n        </CSSTransition>\n      ))}\n      {/* {defContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contact__item}>\n          <span className={styles.contact__text}>\n            {name}: {number}\n          </span>\n          <button className={styles.delete__btn} onClick={onDeleteClick}>\n            Delete\n          </button>\n        </li>\n      ))} */}\n    </TransitionGroup>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const updateFilter = createAction('contacts/updateFilter');\n","import styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterVal } from 'redux/filter/filter-selector';\nimport { updateFilter } from 'redux/filter/filter-actions';\n\nexport default function Filter() {\n  const filterVal = useSelector(getFilterVal);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value } }) => dispatch(updateFilter(value));\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <p className={styles.filter__title}>Find contacts by name</p>\n        <input\n          className={styles.filter__field}\n          type=\"text\"\n          name=\"name\"\n          value={filterVal}\n          placeholder=\"Enter the name...\"\n          onChange={handleChange}\n        />\n      </div>\n    </>\n  );\n}\n","import { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport ContactList from './components/ContactList/ContactList.js';\nimport Filter from './components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/contacts-actions';\nimport { getContacts } from 'redux/contacts/contacts-selector';\n\nimport './index.css';\nimport { CSSTransition } from 'react-transition-group';\nimport titleAppearing from './titleAppearing.module.css';\nimport phonebookAppearing from './phonebookAppearing.module.css';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const updateContacts = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts list!`);\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"phonebook__container\">\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={titleAppearing}\n          unmountOnExit\n        >\n          <h1 className=\"phonebook__title\">Phonebook</h1>\n        </CSSTransition>\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={phonebookAppearing}\n          unmountOnExit\n        >\n          <ContactForm changeContactsState={updateContacts} />\n        </CSSTransition>\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={titleAppearing}\n          unmountOnExit\n        >\n          <h2 className=\"contacts__title\">Contacts</h2>\n        </CSSTransition>\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={phonebookAppearing}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <ContactList />\n      </div>\n    </>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default items;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { updateFilter } from './filter-actions';\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport contactReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  whitelist: ['items'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  items: contactReducer,\n  filter: filterReducer,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store); // wrapper for store to update the localStorage\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from 'App';\nimport { store, persistor } from 'redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"submit__btn\":\"ContactForm_submit__btn__eF7FL\",\"name__label\":\"ContactForm_name__label__Ygtj5\",\"number__label\":\"ContactForm_number__label__2UXJd\",\"form__field\":\"ContactForm_form__field__3Q27b\",\"label\":\"ContactForm_label__3KgVy\"};"],"sourceRoot":""}