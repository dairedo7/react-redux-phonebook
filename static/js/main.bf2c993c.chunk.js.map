{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/contacts/contacts-actions.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","redux/filter/filter-actions.js","components/Filter/Filter.js","App.jsx","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","changeContactsState","useState","name","setName","number","setNumber","handleChange","evt","target","value","console","log","className","styles","form","onSubmit","preventDefault","action","label","htmlFor","form__field","type","id","pattern","title","placeholder","onChange","required","submit__btn","ContactItem","contact","deleteContact","contact__item","contact__text","delete__btn","onClick","addContact","createAction","getFilterVal","state","contacts","filter","getContacts","items","findContactsByQuery","nameToFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","onDeleteClick","list","map","updateFilter","Filter","filterVal","filter__title","filter__field","App","href","find","alert","nanoid","createReducer","payload","_","contactsPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","contactReducer","filterReducer","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bf2c993c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactItem_contact__item__1zKL-\",\"contact__text\":\"ContactItem_contact__text__3MtWr\",\"delete__btn\":\"ContactItem_delete__btn__2EDGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__field\":\"Filter_filter__field__FWY-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import styles from './ContactForm.module.css';\nimport { PropTypes } from 'prop-types';\nimport { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n\n// import { addContact } from 'redux/contacts/contacts-actions';\n// import { getContacts } from 'redux/contacts/contacts-selector';\n\n// const INITIAL_FORM_STATE = { name: '', number: '' };\n\nfunction ContactForm({ changeContactsState }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n\n    console.log({ [name]: value });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    changeContactsState(contact);\n    resetForm();\n  };\n\n  // const { name, number } = this.state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} action=\"#\">\n      <label className={styles.label} htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className={styles.form__field}\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Enter your name\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n\n      <label className={styles.label} htmlFor=\"number\">\n        Number:\n      </label>\n      <input\n        className={styles.form__field}\n        type=\"tel\"\n        id=\"number\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        placeholder=\"Enter your number\"\n        value={number}\n        onChange={handleChange}\n        required\n      />\n\n      <button className={styles.submit__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { changeContactsState: PropTypes.func.isRequired };\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  changeContactsState: PropTypes.func.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nexport default function ContactItem({ contact, deleteContact }) {\n  const { name, number, id } = contact;\n  return (\n    <li key={id} className={styles.contact__item}>\n      <span className={styles.contact__text}>\n        {name}: {number}\n      </span>\n      <button className={styles.delete__btn} onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\n// console.log(createAction);\nexport const deleteContact = createAction('contacts/delete');\n","export const getFilterVal = state => state.contacts.filter;\n","import { getFilterVal } from 'redux/filter/filter-selector';\n\nexport const getContacts = state => state.contacts.items;\n// console.log(getContacts);\nexport const findContactsByQuery = state => {\n  const contacts = getContacts(state);\n  const nameToFilter = getFilterVal(state);\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(nameToFilter.toLowerCase())\n  );\n};\n\nexport const defaultContacts = () => {\n  return [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n};\n","import ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contacts-actions';\nimport { findContactsByQuery } from 'redux/contacts/contacts-selector';\n\nexport default function ContactList() {\n  const contacts = useSelector(findContactsByQuery);\n  const dispatch = useDispatch();\n\n  const onDeleteClick = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => {\n        return (\n          <ContactItem\n            contact={contact}\n            key={contact.name}\n            deleteContact={onDeleteClick}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const updateFilter = createAction('contacts/updateFilter');\n","import styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterVal } from 'redux/filter/filter-selector';\nimport { updateFilter } from 'redux/filter/filter-actions';\n\nexport default function Filter() {\n  const filterVal = useSelector(getFilterVal);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value } }) => dispatch(updateFilter(value));\n\n  return (\n    <>\n      <p className={styles.filter__title}>Find contacts by name</p>\n      <input\n        className={styles.filter__field}\n        type=\"text\"\n        name=\"name\"\n        value={filterVal}\n        placeholder=\"Enter the name...\"\n        onChange={handleChange}\n      />\n    </>\n  );\n}\n","import './index.css';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport ContactList from './components/ContactList/ContactList.js';\nimport Filter from './components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { useEffect } from 'react/cjs/react.production.min';\n// import useLocalStorage from 'components/hooks/useLocalStorage';\n\nimport { addContact } from 'redux/contacts/contacts-actions';\nimport { getContacts } from 'redux/contacts/contacts-selector';\n\n// const defaultContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\nexport default function App() {\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const updateContacts = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts list!`);\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"code__title\">\n        <a\n          className=\"code__link\"\n          href=\"https://github.com/dairedo7/react-assignment-phonebook\"\n        >\n          Project's original code\n        </a>\n      </div>\n      <div className=\"phonebook__container\">\n        <h1 className=\"phonebook__title\">Phonebook</h1>\n        <ContactForm changeContactsState={updateContacts} />\n\n        <h2 className=\"contacts__title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  // state: defaultContacts(),\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default items;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { updateFilter } from './filter-actions';\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport contactReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  whitelist: ['items'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  items: contactReducer,\n  filter: filterReducer,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store); // wrapper for store to update the localStorage\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from 'App';\nimport { store, persistor } from 'redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"submit__btn\":\"ContactForm_submit__btn__5jZrS\",\"label\":\"ContactForm_label__378f8\",\"form__field\":\"ContactForm_form__field__X0wix\"};"],"sourceRoot":""}